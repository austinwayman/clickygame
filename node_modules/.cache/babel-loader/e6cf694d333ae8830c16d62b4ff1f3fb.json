{"ast":null,"code":"import _toConsumableArray from \"/Users/Austin/Desktop/UofA/clickygame/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/Austin/Desktop/UofA/clickygame/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Austin/Desktop/UofA/clickygame/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Austin/Desktop/UofA/clickygame/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Austin/Desktop/UofA/clickygame/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Austin/Desktop/UofA/clickygame/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Austin/Desktop/UofA/clickygame/src/App.js\";\nimport React, { Component } from 'react';\nimport chars from './chars.json';\nimport Wrapper from './components/wrapper/index';\nimport Header from './components/header/index';\nimport Scoreboard from './components/scoreboard/index';\nimport ImgCard from './components/imgCard/index';\nimport GameOver from './components/gameover/index';\n\nfunction randomChars(array) {\n  for (var i = array.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var _ref = [array[j], array[i]];\n    array[i] = _ref[0];\n    array[j] = _ref[1];\n  }\n\n  return array;\n}\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      msg: 'Click any character to begin',\n      score: 0,\n      highScore: 0,\n      chars: chars,\n      selected: [],\n      gameover: false,\n      countdown: ''\n    };\n\n    _this.shuffleChars = function () {\n      var shuffled = randomChars(chars);\n\n      _this.setState({\n        chars: shuffled\n      });\n    };\n\n    _this.handleClick = function (name) {\n      if (!_this.state.gameover) {\n        if (_this.state.selected.indexOf(name) === -1) {\n          _this.increment();\n\n          _this.setState({\n            selected: _toConsumableArray(_this.state.selected).concat([name])\n          });\n        } else {\n          _this.setState({\n            msg: 'GAME OVER',\n            gameover: true\n          });\n\n          _this.reset();\n\n          setTimeout(function () {\n            _this.setState({\n              countdown: 3\n            });\n          }, 1000);\n          setTimeout(function () {\n            _this.setState({\n              countdown: 2\n            });\n          }, 2000);\n          setTimeout(function () {\n            _this.setState({\n              countdown: 1\n            });\n          }, 3000);\n        }\n      } else {\n        _this.setState({\n          msg: 'Click any character to begin',\n          selected: [],\n          score: 0,\n          gameover: false\n        });\n      }\n    };\n\n    _this.increment = function () {\n      var newScore = _this.state.score + 1;\n\n      _this.setState({\n        score: newScore,\n        msg: 'You guessed correctly!'\n      });\n\n      if (newScore >= _this.state.highScore) {\n        _this.setState({\n          highScore: newScore\n        });\n      }\n\n      if (newScore === 12) {\n        _this.setState({\n          msg: 'You win!',\n          selected: [],\n          gameover: true\n        });\n      }\n\n      _this.shuffleChars();\n    };\n\n    _this.reset = function () {\n      setTimeout(function () {\n        _this.setState({\n          msg: 'Click any character to begin',\n          score: 0,\n          highScore: _this.state.highScore,\n          selected: [],\n          gameover: false,\n          countdown: 3\n        });\n\n        _this.shuffleChars();\n      }, 4000);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.state.gameover) {\n        return React.createElement(Wrapper, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }), React.createElement(Scoreboard, {\n          msg: this.state.msg,\n          score: this.state.score,\n          highScore: this.state.highScore,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, this.state.chars.map(function (char) {\n          return React.createElement(ImgCard, {\n            key: char.name,\n            name: char.name,\n            img_url: char.img_url,\n            shuffleChars: _this2.shuffleChars,\n            handleClick: _this2.handleClick,\n            increment: _this2.increment,\n            reset: _this2.reset,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          });\n        })));\n      } else {\n        return React.createElement(Wrapper, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, React.createElement(Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }), React.createElement(Scoreboard, {\n          msg: this.state.msg,\n          score: this.state.score,\n          highScore: this.state.highScore,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, React.createElement(GameOver, {\n          msg: this.props.msg,\n          score: this.state.score,\n          gameover: this.state.gameover,\n          countdown: this.state.countdown,\n          handleClick: this.handleClick,\n          reset: this.reset,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        })));\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/Austin/Desktop/UofA/clickygame/src/App.js"],"names":["React","Component","chars","Wrapper","Header","Scoreboard","ImgCard","GameOver","randomChars","array","i","length","j","Math","floor","random","App","state","msg","score","highScore","selected","gameover","countdown","shuffleChars","shuffled","setState","handleClick","name","indexOf","increment","reset","setTimeout","newScore","map","char","img_url","props"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,QAAP,MAAqB,6BAArB;;AAGA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,OAAK,IAAIC,CAAC,GAAGD,KAAK,CAACE,MAAN,GAAe,CAA5B,EAA+BD,CAAC,GAAG,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACzC,QAAIE,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAR;AADyC,eAElB,CAACD,KAAK,CAACG,CAAD,CAAN,EAAWH,KAAK,CAACC,CAAD,CAAhB,CAFkB;AAExCD,IAAAA,KAAK,CAACC,CAAD,CAFmC;AAE9BD,IAAAA,KAAK,CAACG,CAAD,CAFyB;AAG1C;;AACD,SAAOH,KAAP;AACD;;IAEKO,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,GAAG,EAAE,8BADC;AAENC,MAAAA,KAAK,EAAE,CAFD;AAGNC,MAAAA,SAAS,EAAE,CAHL;AAINlB,MAAAA,KAAK,EAAEA,KAJD;AAKNmB,MAAAA,QAAQ,EAAE,EALJ;AAMNC,MAAAA,QAAQ,EAAE,KANJ;AAONC,MAAAA,SAAS,EAAE;AAPL,K;;UAURC,Y,GAAe,YAAM;AACnB,UAAIC,QAAQ,GAAGjB,WAAW,CAACN,KAAD,CAA1B;;AACA,YAAKwB,QAAL,CAAc;AAACxB,QAAAA,KAAK,EAAEuB;AAAR,OAAd;AACD,K;;UAEDE,W,GAAc,UAACC,IAAD,EAAU;AACtB,UAAI,CAAC,MAAKX,KAAL,CAAWK,QAAhB,EAA0B;AACxB,YAAI,MAAKL,KAAL,CAAWI,QAAX,CAAoBQ,OAApB,CAA4BD,IAA5B,MAAsC,CAAC,CAA3C,EAA8C;AAC5C,gBAAKE,SAAL;;AACA,gBAAKJ,QAAL,CAAc;AAAEL,YAAAA,QAAQ,qBAAM,MAAKJ,KAAL,CAAWI,QAAjB,UAA2BO,IAA3B;AAAV,WAAd;AACD,SAHD,MAGO;AACL,gBAAKF,QAAL,CAAc;AAAER,YAAAA,GAAG,EAAE,WAAP;AAAoBI,YAAAA,QAAQ,EAAE;AAA9B,WAAd;;AACA,gBAAKS,KAAL;;AACAC,UAAAA,UAAU,CAAC,YAAM;AACf,kBAAKN,QAAL,CAAc;AAAEH,cAAAA,SAAS,EAAE;AAAb,aAAd;AACD,WAFS,EAEP,IAFO,CAAV;AAGAS,UAAAA,UAAU,CAAC,YAAM;AACf,kBAAKN,QAAL,CAAc;AAAEH,cAAAA,SAAS,EAAE;AAAb,aAAd;AACD,WAFS,EAEP,IAFO,CAAV;AAGAS,UAAAA,UAAU,CAAC,YAAM;AACf,kBAAKN,QAAL,CAAc;AAAEH,cAAAA,SAAS,EAAE;AAAb,aAAd;AACD,WAFS,EAEP,IAFO,CAAV;AAGD;AACF,OAjBD,MAiBO;AACL,cAAKG,QAAL,CAAc;AACZR,UAAAA,GAAG,EAAE,8BADO;AAEZG,UAAAA,QAAQ,EAAE,EAFE;AAGZF,UAAAA,KAAK,EAAE,CAHK;AAIZG,UAAAA,QAAQ,EAAE;AAJE,SAAd;AAMD;AACF,K;;UAEDQ,S,GAAY,YAAM;AAChB,UAAMG,QAAQ,GAAG,MAAKhB,KAAL,CAAWE,KAAX,GAAmB,CAApC;;AACA,YAAKO,QAAL,CAAc;AACZP,QAAAA,KAAK,EAAEc,QADK;AAEZf,QAAAA,GAAG,EAAE;AAFO,OAAd;;AAIA,UAAIe,QAAQ,IAAI,MAAKhB,KAAL,CAAWG,SAA3B,EAAsC;AACpC,cAAKM,QAAL,CAAc;AAAEN,UAAAA,SAAS,EAAEa;AAAb,SAAd;AACD;;AACD,UAAIA,QAAQ,KAAK,EAAjB,EAAqB;AACnB,cAAKP,QAAL,CAAc;AACZR,UAAAA,GAAG,EAAE,UADO;AAEZG,UAAAA,QAAQ,EAAE,EAFE;AAGZC,UAAAA,QAAQ,EAAE;AAHE,SAAd;AAKD;;AACD,YAAKE,YAAL;AACD,K;;UAEDO,K,GAAQ,YAAM;AACZC,MAAAA,UAAU,CAAC,YAAM;AACjB,cAAKN,QAAL,CAAc;AACZR,UAAAA,GAAG,EAAE,8BADO;AAEZC,UAAAA,KAAK,EAAE,CAFK;AAGZC,UAAAA,SAAS,EAAE,MAAKH,KAAL,CAAWG,SAHV;AAIZC,UAAAA,QAAQ,EAAE,EAJE;AAKZC,UAAAA,QAAQ,EAAE,KALE;AAMZC,UAAAA,SAAS,EAAE;AANC,SAAd;;AAQA,cAAKC,YAAL;AACC,OAVS,EAUP,IAVO,CAAV;AAWD,K;;;;;;;6BAEQ;AAAA;;AACP,UAAI,CAAC,KAAKP,KAAL,CAAWK,QAAhB,EAA0B;AAC1B,eACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,oBAAC,UAAD;AACE,UAAA,GAAG,EAAE,KAAKL,KAAL,CAAWC,GADlB;AAEE,UAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,KAFpB;AAGE,UAAA,SAAS,EAAE,KAAKF,KAAL,CAAWG,SAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAOE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEE,KAAKH,KAAL,CAAWf,KAAX,CAAiBgC,GAAjB,CAAqB,UAAAC,IAAI;AAAA,iBACvB,oBAAC,OAAD;AACE,YAAA,GAAG,EAAEA,IAAI,CAACP,IADZ;AAEE,YAAA,IAAI,EAAEO,IAAI,CAACP,IAFb;AAGE,YAAA,OAAO,EAAEO,IAAI,CAACC,OAHhB;AAIE,YAAA,YAAY,EAAE,MAAI,CAACZ,YAJrB;AAKE,YAAA,WAAW,EAAE,MAAI,CAACG,WALpB;AAME,YAAA,SAAS,EAAE,MAAI,CAACG,SANlB;AAOE,YAAA,KAAK,EAAE,MAAI,CAACC,KAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADuB;AAAA,SAAzB,CAFF,CAPF,CADF;AAyBD,OA1BC,MA0BK;AACL,eACA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEI,oBAAC,UAAD;AACE,UAAA,GAAG,EAAE,KAAKd,KAAL,CAAWC,GADlB;AAEE,UAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,KAFpB;AAGE,UAAA,SAAS,EAAE,KAAKF,KAAL,CAAWG,SAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAOE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,QAAD;AACE,UAAA,GAAG,EAAE,KAAKiB,KAAL,CAAWnB,GADlB;AAEE,UAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,KAFpB;AAGE,UAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWK,QAHvB;AAIE,UAAA,SAAS,EAAE,KAAKL,KAAL,CAAWM,SAJxB;AAKE,UAAA,WAAW,EAAE,KAAKI,WALpB;AAME,UAAA,KAAK,EAAE,KAAKI,KANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAPF,CADA;AAoBD;AACA;;;;EA9He9B,S;;AAiIlB,eAAee,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport chars from './chars.json';\nimport Wrapper from './components/wrapper/index';\nimport Header from './components/header/index';\nimport Scoreboard from './components/scoreboard/index';\nimport ImgCard from './components/imgCard/index';\nimport GameOver from './components/gameover/index';\n\n\nfunction randomChars(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\nclass App extends Component {\n  state = {\n    msg: 'Click any character to begin',\n    score: 0,\n    highScore: 0,\n    chars: chars,\n    selected: [],\n    gameover: false,\n    countdown: '',\n  }\n\n  shuffleChars = () => {\n    let shuffled = randomChars(chars);\n    this.setState({chars: shuffled});\n  }\n\n  handleClick = (name) => {\n    if (!this.state.gameover) {\n      if (this.state.selected.indexOf(name) === -1) {\n        this.increment();\n        this.setState({ selected: [...this.state.selected, name] });\n      } else {\n        this.setState({ msg: 'GAME OVER', gameover: true })\n        this.reset();\n        setTimeout(() => {\n          this.setState({ countdown: 3 });\n        }, 1000)\n        setTimeout(() => {\n          this.setState({ countdown: 2 });\n        }, 2000)\n        setTimeout(() => {\n          this.setState({ countdown: 1 });\n        }, 3000)\n      }\n    } else {\n      this.setState({ \n        msg: 'Click any character to begin', \n        selected: [],\n        score: 0,\n        gameover: false\n      });\n    }\n  }\n\n  increment = () => {\n    const newScore = this.state.score + 1;\n    this.setState({\n      score: newScore,\n      msg: 'You guessed correctly!'\n    });\n    if (newScore >= this.state.highScore) {\n      this.setState({ highScore: newScore });\n    }\n    if (newScore === 12) {\n      this.setState({ \n        msg: 'You win!', \n        selected: [],\n        gameover: true\n      });\n    }\n    this.shuffleChars();\n  };\n\n  reset = () => {\n    setTimeout(() => {  \n    this.setState({\n      msg: 'Click any character to begin',\n      score: 0,\n      highScore: this.state.highScore,\n      selected: [],\n      gameover: false,\n      countdown: 3\n    });\n    this.shuffleChars()\n    }, 4000);\n  }\n\n  render() {\n    if (!this.state.gameover) {\n    return (\n      <Wrapper>\n        <Header />\n        <Scoreboard \n          msg={this.state.msg}\n          score={this.state.score}\n          highScore={this.state.highScore}\n        />\n        <div className=\"container\">  \n        { \n          this.state.chars.map(char => (\n            <ImgCard \n              key={char.name}\n              name={char.name}\n              img_url={char.img_url}\n              shuffleChars={this.shuffleChars}\n              handleClick={this.handleClick}\n              increment={this.increment}\n              reset={this.reset}\n            />\n          ))\n        }\n        </div>\n      </Wrapper>\n    )\n  } else {\n    return (\n    <Wrapper>\n      <Header />\n        <Scoreboard \n          msg={this.state.msg}\n          score={this.state.score}\n          highScore={this.state.highScore}\n        />\n      <div className=\"container\">  \n        <GameOver \n          msg={this.props.msg}\n          score={this.state.score}\n          gameover={this.state.gameover}\n          countdown={this.state.countdown}\n          handleClick={this.handleClick}\n          reset={this.reset}\n        />\n      </div>\n    </Wrapper>\n    )\n  }\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}